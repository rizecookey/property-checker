# This file is part of the Property Checker.
# Copyright (c) 2021 -- present. Property Checker developers.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU General Public License version 2 only, as
# published by the Free Software Foundation.
#
# This code is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
# FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
# version 2 for more details.
#
# You should have received a copy of the GNU General Public License version
# 2 along with this work; if not, write to the Free Software Foundation,
# Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA.
ident length;

annotation UnknownLength() any :<==> "true" for "true";
annotation BottomLength() any :<==> "false" for "true";

annotation Length(int len) pkg.List
    :<==> "(§subject§ == null && §len§ == 0) || (§subject§ != null && §subject§.size == §len§)"
    for "§len§ >= 0";

annotation LengthAtLeast(int len) pkg.List
    :<==> "(§subject§ == null && §len§ == 0) || (§subject§ != null && §subject§.size >= §len§)"
    for "§len§ >= 0";

relation LengthAtLeast(a) <: UnknownLength() :<==> "true";
relation BottomLength() <: LengthAtLeast(a) :<==> "true";

relation Length(a) <: Length(b) :<==> "§a§ == §b§";

relation Length(a) <: UnknownLength() :<==> "true";
relation BottomLength() <: Length(a) :<==> "true";

join Length(a), Length(b) := UnknownLength();
    
# non-overlapping
meet Length(a), Length(b) := BottomLength();
